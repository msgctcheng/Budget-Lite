<div> {{budget.testing}} </div>
<div id="dashboard_top" class="tabcontent tabheader">
    <h3>Dashboard</h3>
    <p>User Dashboard</p>
</div>
<div id="savings_top" class="tabcontent tabheader">
    <h3>Savings</h3>
    <p>User's Savings</p>
</div>
<div id="spending_top" class="tabcontent tabheader">
    <h3>Spending</h3>
    <p>User's Spending</p>
</div>
<div id="goals_top" class="tabcontent tabheader">
    <h3>Goals</h3>
    <p>User Goals</p>
</div>
<button class="tablink" onclick="openTab('dashboard_top', 'dashboard_bot', this, 'red')" id="defaultOpen">Dashboard</button>
<button class="tablink" onclick="openTab('savings_top','savings_bot', this, 'green')">Savings</button>
<button class="tablink" onclick="openTab('spending_top', 'spending_bot', this, 'blue')">Spending</button>
<button class="tablink" onclick="openTab('goals_top', 'goals_bot', this, 'orange')">Goals</button>
<div id="dashboard_bot" class="tabcontent tabheader">
    <h3>Dashboard</h3>
    <p>User Dashboard</p>
    <button class="modalButton">Add Transaction</button>
</div>

<div id="savings_bot" class="tabcontent tabheader">
    <h3>Savings</h3>
    <div class="graph"></div>
    <p>User's Savings</p>

    <button class="modalButton">Add Transaction</button>
</div>

<div id="spending_bot" class="tabcontent tabheader">
    <h3>Spending</h3>
    <div class="graph"></div>
    <p>User's Spending</p>
    <button class="modalButton">Add Transaction</button>
</div>

<div id="goals_bot" class="tabcontent tabheader">
    <h3>Goals</h3>
    <div class="graph"></div>
    <p>User Goals</p>
    <button class="modalButton">Add Transaction</button>
</div>
<!-- Appends d3 graph to empty div -->
<div class="modalContent">
    <span class="closeModal">&times;</span>
    {{!-- Plus Minus (Slider or Radial) Amount Category: dropdown Description --}}
    <div class="switch">
        
        <input type="checkbox" class="switch-checkbox" id="myswitch" checked>
        <label class="switch-label" for="myswitch">
            <span class="switch-inner"></span>
            <span class="switch-switch"></span>
        </label>
    </div>
    <input class="amount" type="text" placeholder="Amount"><br>
    
    <select id="drop"  class="dropCont">
        <option value="rent">Rent</option>
        <option value="bills">Bills</option>
        <option value="food">Food</option>
        <option value="gas">Gas</option>
        <option value="other">Other</option>
    </select>
   
    <input class="description" type="text" placeholder="Description"> <br>
    <button class="modalSubmit">Submit</button> 

</div>
<script src="http://d3js.org/d3.v3.min.js"></script>

<script>
    // Set the dimensions of the canvas / graph
    var margin = { top: 30, right: 20, bottom: 30, left: 50 },
        width = 600 - margin.left - margin.right,
        height = 270 - margin.top - margin.bottom;
    // Parse the date / time
    var parseDate = d3.time.format("%d-%b-%y").parse;
    // Set the ranges
    var x = d3.time.scale().range([0, width]);
    var y = d3.scale.linear().range([height, 0]);
    // Define the axes
    var xAxis = d3.svg.axis().scale(x)
        .orient("bottom").ticks(5);
    var yAxis = d3.svg.axis().scale(y)
        .orient("left").ticks(5);
    // Define the line
    var valueline = d3.svg.line()
        .x(function (d) { return x(d.date); })
        .y(function (d) { return y(d.close); });

    // Adds the svg canvas`
    var svg = d3.select(".graph")
        .append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
        .append("g")
        .attr("transform",
        "translate(" + margin.left + "," + margin.top + ")");
    // Get the data
    d3.csv("data.csv", function (error, data) {
        data.forEach(function (d) {
            d.date = parseDate(d.date);
            d.close = +d.close;
        });
        // Scale the range of the data
        x.domain(d3.extent(data, function (d) { return d.date; }));
        y.domain([0, d3.max(data, function (d) { return d.close; })]);
        // Add the valueline path.
        svg.append("path")
            .attr("class", "line")
            .attr("d", valueline(data));
        // Add the X Axis
        svg.append("g")
            .attr("class", "x axis")
            .attr("transform", "translate(0," + height + ")")
            .call(xAxis);
        // Add the Y Axis
        svg.append("g")
            .attr("class", "y axis")
            .call(yAxis);
    });
</script>